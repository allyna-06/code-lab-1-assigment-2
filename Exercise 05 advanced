# Dictionary mapping month numbers to the number of days (non-leap year)
month_days = {
    1: 31,   # January has 31 days
    2: 28,   # February has 28 days by default (non-leap year)
    3: 31,   # March has 31 days
    4: 30,   # April has 30 days
    5: 31,   # May has 31 days
    6: 30,   # June has 30 days
    7: 31,   # July has 31 days
    8: 31,   # August has 31 days
    9: 30,   # September has 30 days
    10: 31,  # October has 31 days
    11: 30,  # November has 30 days
    12: 31   # December has 31 days
}

# Prompt the user to enter a month number (1–12)
try:
    selected_month = int(input("Enter the month number (1–12): "))

    # Validate if the entered number is within the valid month range
    if 1 <= selected_month <= 12:
        # Check specifically if the selected month is February
        if selected_month == 2:
            # Ask the user for the year
            year_input = int(input("Enter the year: "))
            
            # Ask whether the year is a leap year
            is_leap = input(f"Is the year {year_input} a leap year? (yes/no): ").strip().lower()
            
            # Update February's days based on leap year status
            if is_leap == "yes":
                month_days[2] = 29  # February in a leap year has 29 days
            else:
                month_days[2] = 28  # February in a non-leap year has 28 days
            
            # Display the result for February
            print(f"February ({selected_month}) in the year {year_input} has {month_days[selected_month]} days.")
        else:
            # Display result for all other months
            print(f"Month {selected_month} has {month_days[selected_month]} days.")
    else:
        # Handle case when month number is out of valid range
        print("Invalid month number! Please enter a number between 1 and 12.")
except ValueError:
    # Handle non-integer input
    print("Invalid input! Please enter a valid integer for the month number.")
